class PatientMonitor {
  constructor() {
    this.monitorElement = document.getElementById('patients-monitor');
    this.lastUpdatedElement = document.getElementById('last-updated');
    this.updateInterval = null;
    this.init();
  }

  init() {
    this.updateMonitor();
    this.startAutoUpdate();
    this.setupEventListeners();
  }

  async updateMonitor() {
    try {
      const response = await fetch('/beds/data');
      const patients = await response.json();
      this.updateLastUpdated();
      this.renderPatients(patients);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
      this.showError();
    }
  }

  renderPatients(patients) {
    if (patients.length === 0) {
      this.showEmptyState();
      return;
    }

    const html = patients.map(patient => this.createPatientCard(patient)).join('');
    this.monitorElement.innerHTML = `
      <div class="monitor-grid">
        ${html}
      </div>
    `;
  }

  createPatientCard(patient) {
    const timeLeft = patient.time_left;
    const isCritical = timeLeft.critical && !timeLeft.expired;
    const isExpired = timeLeft.expired;
    
    const cardClass = `patient-card priority-${patient.priority} ${
      isCritical ? 'critical' : ''} ${isExpired ? 'expired' : ''}`;

    const timerClass = `timer ${isCritical ? 'critical' : ''} ${isExpired ? 'expired' : ''}`;
    
    const timeText = isExpired ? '–í–†–ï–ú–Ø –í–´–®–õ–û' : 
      `${timeLeft.minutes.toString().padStart(2, '0')}:${timeLeft.seconds.toString().padStart(2, '0')}`;

    const statusText = isExpired ? '–¢–†–ï–ë–£–ï–¢–°–Ø –ù–ï–ú–ï–î–õ–ï–ù–ù–û–ï –í–ù–ò–ú–ê–ù–ò–ï!' :
                   isCritical ? '–ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –í–†–ï–ú–Ø!' : '';

    const statusClass = isExpired ? 'status expired' : 
                     isCritical ? 'status critical' : '';

    return `
      <div class="${cardClass}">
        <div class="card-header">
          <h3 class="patient-name">${patient.full_name}</h3>
          <span class="priority-badge">–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ${patient.priority}</span>
        </div>
        
        <div class="card-body">
          <div class="admission-time">
            –ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ: ${new Date(patient.admission_time).toLocaleString('ru-RU')}
          </div>
          
          <div class="timer-container">
            <div class="${timerClass}">${timeText}</div>
            <div class="time-label">–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏</div>
          </div>
        </div>

        ${statusText ? `
          <div class="${statusClass}">
            ${statusText}
          </div>
        ` : ''}
      </div>
    `;
  }

  showEmptyState() {
    this.monitorElement.innerHTML = `
      <div class="empty-state">
        <div class="empty-icon">üìã</div>
        <h3>–ù–µ—Ç –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –Ω–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ</h3>
        <p>–î–æ–±–∞–≤—å—Ç–µ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</p>
      </div>
    `;
  }

  showError() {
    this.monitorElement.innerHTML = `
      <div class="error-state">
        <div class="error-icon">‚ö†Ô∏è</div>
        <h3>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö</h3>
        <p>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞</p>
        <button class="btn-retry" onclick="monitor.updateMonitor()">–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É</button>
      </div>
    `;
  }

  updateLastUpdated() {
    const now = new Date();
    if (this.lastUpdatedElement) {
      this.lastUpdatedElement.textContent = `–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${now.toLocaleTimeString('ru-RU')}`;
    }
  }

  startAutoUpdate() {
    this.updateInterval = setInterval(() => {
      this.updateMonitor();
    }, 5000);
  }

  setupEventListeners() {
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
  }

  destroy() {
    if (this.updateInterval) {
      clearInterval(this.updateInterval);
    }
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
  window.monitor = new PatientMonitor();
});

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
function refreshMonitor() {
  if (window.monitor) {
    window.monitor.updateMonitor();
  }
}

function toggleFullscreen() {
  if (!document.fullscreenElement) {
    document.documentElement.requestFullscreen().catch(err => {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞:', err);
    });
  } else {
    document.exitFullscreen();
  }
}