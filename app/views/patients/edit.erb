<% @title = "Редактирование пациента" %>

<div class="row justify-content-center">
  <div class="col-lg-8">
    <div class="card">
      <div class="card-header">
        <h4 class="mb-0"><i class="bi bi-pencil"></i> Редактирование пациента</h4>
      </div>
      <div class="card-body">
        <form action="/patients/<%= @patient.id %>" method="post" id="patientForm">
          <input type="hidden" name="_method" value="put">
          
          <div class="row">
            <div class="col-md-6 mb-3">
              <div class="form-group">
                <label for="full_name" class="form-label">ФИО пациента</label>
                <input type="text" id="full_name" name="full_name" class="form-control" required 
                       value="<%= @patient.full_name %>"
                       placeholder="Введите полное имя">
              </div>
            </div>
            
            <div class="col-md-6 mb-3">
              <div class="form-group">
                <label for="date_of_birth" class="form-label">Дата рождения</label>
                <input type="text" id="date_of_birth" name="date_of_birth" class="form-control" 
                       value="<%= @patient.date_of_birth_formatted %>"
                       placeholder="дд.мм.гггг" required
                       pattern="\d{2}\.\d{2}\.\d{4}"
                       title="Введите дату в формате дд.мм.гггг">
                <small class="form-text text-muted">Формат: дд.мм.гггг (например: 15.05.1990)</small>
              </div>
            </div>
          </div>

          <div class="row">
            <div class="col-md-6 mb-3">
              <div class="form-group">
                <label for="admission_time" class="form-label">Дата и время поступления</label>
                <input type="text" id="admission_time" name="admission_time" class="form-control" 
                       value="<%= @patient.admission_time.strftime('%d.%m.%Y %H:%M') %>"
                       placeholder="дд.мм.гггг чч:мм" required
                       pattern="\d{2}\.\d{2}\.\d{4} \d{2}:\d{2}"
                       title="Введите дату и время в формате дд.мм.гггг чч:мм">
                <small class="form-text text-muted">Формат: дд.мм.гггг чч:мм (например: 15.05.2024 14:30)</small>
              </div>
            </div>
          </div>

          <div class="row mt-4">
            <div class="col">
              <button type="submit" class="btn btn-main">
                <i class="bi bi-check-lg"></i> Сохранить изменения
              </button>
              <a href="/patients/<%= @patient.id %>" class="btn btn-secondary">
                <i class="bi bi-arrow-left"></i> Отмена
              </a>
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Маска для даты рождения
  const dobInput = document.getElementById('date_of_birth');
  const admissionInput = document.getElementById('admission_time');
  
  // Функция для форматирования даты
  function formatDate(input, event) {
    let value = input.value.replace(/\D/g, '');
    
    if (event.inputType === 'deleteContentBackward') {
      return; // Не форматируем при удалении
    }
    
    if (value.length <= 2) {
      input.value = value;
    } else if (value.length <= 4) {
      input.value = value.slice(0, 2) + '.' + value.slice(2);
    } else if (value.length <= 8) {
      input.value = value.slice(0, 2) + '.' + value.slice(2, 4) + '.' + value.slice(4);
    } else {
      input.value = value.slice(0, 2) + '.' + value.slice(2, 4) + '.' + value.slice(4, 8);
    }
  }
  
  // Функция для форматирования даты и времени
  function formatDateTime(input, event) {
    let value = input.value.replace(/\D/g, '');
    
    if (event.inputType === 'deleteContentBackward') {
      return;
    }
    
    if (value.length <= 2) {
      input.value = value;
    } else if (value.length <= 4) {
      input.value = value.slice(0, 2) + '.' + value.slice(2);
    } else if (value.length <= 8) {
      input.value = value.slice(0, 2) + '.' + value.slice(2, 4) + '.' + value.slice(4);
    } else if (value.length <= 10) {
      input.value = value.slice(0, 2) + '.' + value.slice(2, 4) + '.' + value.slice(4, 8) + ' ' + value.slice(8);
    } else if (value.length <= 12) {
      input.value = value.slice(0, 2) + '.' + value.slice(2, 4) + '.' + value.slice(4, 8) + ' ' + value.slice(8, 10) + ':' + value.slice(10);
    }
  }
  
  // Обработчики для масок
  dobInput.addEventListener('input', function(e) {
    formatDate(this, e);
  });
  
  admissionInput.addEventListener('input', function(e) {
    formatDateTime(this, e);
  });
  
  // Валидация перед отправкой
  document.getElementById('patientForm').addEventListener('submit', function(e) {
    // Проверяем дату рождения
    const dobValue = dobInput.value;
    if (!/^\d{2}\.\d{2}\.\d{4}$/.test(dobValue)) {
      e.preventDefault();
      alert('Пожалуйста, введите корректную дату рождения в формате дд.мм.гггг');
      dobInput.focus();
      return;
    }
    
    // Проверяем дату поступления
    const admissionValue = admissionInput.value;
    if (!/^\d{2}\.\d{2}\.\d{4} \d{2}:\d{2}$/.test(admissionValue)) {
      e.preventDefault();
      alert('Пожалуйста, введите корректную дату и время в формате дд.мм.гггг чч:мм');
      admissionInput.focus();
      return;
    }
    
    // Конвертируем в форматы для сервера
    const hiddenDob = document.createElement('input');
    hiddenDob.type = 'hidden';
    hiddenDob.name = 'date_of_birth';
    hiddenDob.value = convertToISODate(dobValue);
    this.appendChild(hiddenDob);
    
    const hiddenAdmission = document.createElement('input');
    hiddenAdmission.type = 'hidden';
    hiddenAdmission.name = 'admission_time';
    hiddenAdmission.value = convertToISODateTime(admissionValue);
    this.appendChild(hiddenAdmission);
  });
  
  // Функции конвертации
  function convertToISODate(dateStr) {
    const parts = dateStr.split('.');
    return `${parts[2]}-${parts[1]}-${parts[0]}`;
  }
  
  function convertToISODateTime(dateTimeStr) {
    const [datePart, timePart] = dateTimeStr.split(' ');
    const dateParts = datePart.split('.');
    return `${dateParts[2]}-${dateParts[1]}-${dateParts[0]}T${timePart}:00`;
  }
  
  // Улучшаем UX для планшетов
  const inputs = document.querySelectorAll('input[type="text"]');
  inputs.forEach(input => {
    input.addEventListener('focus', function() {
      this.style.borderColor = 'var(--main-color)';
      this.style.boxShadow = '0 0 0 0.2rem rgba(84, 198, 84, 0.2)';
      
      // Показываем виртуальную клавиатуру с цифрами на планшетах
      if ('virtualKeyboard' in navigator) {
        this.setAttribute('inputmode', 'numeric');
      }
    });
    
    input.addEventListener('blur', function() {
      this.style.borderColor = '';
      this.style.boxShadow = '';
    });
    
    // Увеличиваем область клика для планшетов
    input.style.minHeight = '48px';
    input.style.fontSize = '16px';
  });
  
  // Автозаполнение текущей даты и времени по двойному клику
  admissionInput.addEventListener('dblclick', function() {
    const now = new Date();
    const day = String(now.getDate()).padStart(2, '0');
    const month = String(now.getMonth() + 1).padStart(2, '0');
    const year = now.getFullYear();
    const hours = String(now.getHours()).padStart(2, '0');
    const minutes = String(now.getMinutes()).padStart(2, '0');
    
    this.value = `${day}.${month}.${year} ${hours}:${minutes}`;
  });
});
</script>

<style>
/* Стили для улучшения UX на планшетах */
.form-control {
  font-size: 16px !important; /* Предотвращает zoom на iOS */
  min-height: 48px;
}

.form-text {
  font-size: 0.85rem;
  margin-top: 0.25rem;
}

/* Подсветка placeholder */
::placeholder {
  color: #6c757d;
  opacity: 0.7;
}

/* Улучшение для touch-устройств */
input[type="text"] {
  -webkit-user-select: text; /* Разрешаем выделение текста */
  user-select: text;
}

/* Стили для валидации */
input:invalid {
  border-color: #dc3545 !important;
}

input:valid {
  border-color: #28a745 !important;
}

/* Анимация при фокусе */
.form-control:focus {
  border-color: var(--main-color);
  box-shadow: 0 0 0 0.2rem rgba(84, 198, 84, 0.25);
}

/* Медиа-запросы для планшетов */
@media (max-width: 768px) {
  .form-control {
    font-size: 18px !important; /* Еще больше для мобильных */
  }
  
  .btn {
    min-height: 54px;
    font-size: 18px;
  }
}
</style>